package metodosOrdenação;

import Dados.Item;

public class HeapSort{

    public void heapSort(Item vetor[]){
        int dir = vetor.length - 1;
        int esq = (dir - 1) / 2;
        Item temp;
        while (esq >= 0){
            refazHeap(esq, vetor.length - 1, vetor);
            esq--;
        }
        while (dir > 0){
            temp = vetor[0];
            vetor[0] = vetor[dir];
            vetor[dir] = temp;
            dir--;
            refazHeap(0, dir, vetor);
        }
    }

    private void refazHeap(int esq, int dir, Item vetor[]){
        int i = esq;
        int maiorFolha = 2 * i + 1;
        Item raiz = vetor[i];
        boolean heap = false;
        while ((maiorFolha <= dir) && (!heap)){
            if (maiorFolha < dir){
                if (vetor[maiorFolha].getPlaca().compareTo(vetor[maiorFolha + 1].getPlaca()) < 0){
                    maiorFolha++;
                }
            }
            if (raiz.getPlaca().compareTo(vetor[maiorFolha].getPlaca()) < 0){
            	vetor[i] = vetor[maiorFolha];
                i = maiorFolha;
                maiorFolha = 2 * i + 1;
            }else{
                heap = true;
            }
        }
        vetor[i] = raiz;
    }
}
